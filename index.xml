<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>June&#39;s site</title>
    <link>https://june512.github.io/</link>
    <description>Recent content on June&#39;s site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <managingEditor>kki6890k@gmail.com (Kim Kang-il)</managingEditor>
    <webMaster>kki6890k@gmail.com (Kim Kang-il)</webMaster>
    <lastBuildDate>Tue, 26 May 2020 09:24:04 +0900</lastBuildDate>
    
	<atom:link href="https://june512.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>명령어</title>
      <link>https://june512.github.io/%EB%AA%85%EB%A0%B9%EC%96%B4/</link>
      <pubDate>Tue, 26 May 2020 09:24:04 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/%EB%AA%85%EB%A0%B9%EC%96%B4/</guid>
      <description>터미널에서 시스템 종료 명령어 실행 poweroff shutdown -P now halt -p init 0
shutdown -P +10 → 10분 후에 종료(P : poweroff) shutdown -r 22:00 → 오후 10시에 재부팅(r : reboot) shutdown -c → 예약된 shutdown을 취소(c : cancel) shutdown -k +15 →현재 접속한 사용자에게 15분 후에 종료된다는 메시지를 보내지만 실제로는 종료는 안 됨 런레벨    런레벨 영문 모드 설명 비고     0 Power off 종료 모드    1 Rescue 시스템 복구모드 단일 사용자 모드   2 Multi-User  사용하지 않음   3 Multi-User 텍스트 모드의 다중 사용자 모드    4 Multi-User  사용하지 않음   5 Graphical 그래픽 모드의 다중 사용자 모드    6 Reboot      init 0 → 지금 즉시 런레벨 0번으로 시스템을 전환하라는 의미 즉, 즉시 시스템 종료</description>
    </item>
    
    <item>
      <title>Docker_Engine_in_ubuntu</title>
      <link>https://june512.github.io/docker_engine_in_ubuntu/</link>
      <pubDate>Thu, 21 May 2020 12:47:08 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/docker_engine_in_ubuntu/</guid>
      <description>전제 조건 OS 요구 사항 Docker Engine을 설치하려면 다음 Ubuntu 버전 중 하나의 64 비트 버전이 필요
- 우분투 Eoan 19.10 - 우분투 바이오닉 18.04 (LTS) - 우분투 제니 얼 16.04 (LTS)  이전 버전 제거 $ sudo apt-get remove docker docker-engine docker.io containerd runc 설치 저장소를 사용하여 설치  HTTPS를 통해 저장소를 사용할 수 있도록 패키지 색인을 업데이트하고 패키지를 설치   $ sudo apt-get update $ sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ software-properties-common Docker의 공식 GPG 키를 추가   $ curl -fsSL https://download.</description>
    </item>
    
    <item>
      <title>Docker_insert_in_ubuntu</title>
      <link>https://june512.github.io/docker_insert_in_ubuntu/</link>
      <pubDate>Thu, 21 May 2020 12:28:08 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/docker_insert_in_ubuntu/</guid>
      <description>기존 도커 설치 버전을 제거 sudo apt-get remove docker docker-engine docker.io containerd runc
저장소를 업데이트 한다. sudo apt-get update
apt 가 https 저장소를 사용할 수 있도록 설치한다. sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
도커 저장소 키를 apt에 등록한다. curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
아래 명령어로 docker-ce 키가 등록되었는지 확인한다. sudo apt-key fingerprint 0EBFCD88
pub rsa4096 2017-02-22 [SCEA] 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 uid [ unknown] Docker Release (CE deb) &amp;lt;docker@docker.</description>
    </item>
    
    <item>
      <title>AWS_Ubuntu에서_git_연동</title>
      <link>https://june512.github.io/aws_ubuntu%EC%97%90%EC%84%9C_git_%EC%97%B0%EB%8F%99/</link>
      <pubDate>Tue, 19 May 2020 18:03:33 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/aws_ubuntu%EC%97%90%EC%84%9C_git_%EC%97%B0%EB%8F%99/</guid>
      <description>AWS Ubuntu에서 git 연동 1. github 저장소 만들기 - 모르면 검색해서 저장소 만들어 주세요. 2. git init 2.1 AWS를 putty로 연결을 했다라는 전제 조건이 붙는다. 2.2 github에 올리고 싶은 폴더에 가서 git init을 한다. * git init : git을 사용하기 위해 git 초기화를 하는 단계. 3. git add -(-A를 하면 현재 폴더 전체, 각개를 하려면 -test.js라고 하면 된다.) * 깃은 3가지 stage가 있는데 working Directory(로컬저장소), Staging Area(임시저장소), Git Directory(Repository)이다. * git add 를 사용하는건 로컬-&amp;gt;임시저장소로 보내는 과정이다.</description>
    </item>
    
    <item>
      <title>AWS_EC2_웹서버(2)</title>
      <link>https://june512.github.io/aws_ec2_%EC%9B%B9%EC%84%9C%EB%B2%842/</link>
      <pubDate>Tue, 19 May 2020 17:49:16 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/aws_ec2_%EC%9B%B9%EC%84%9C%EB%B2%842/</guid>
      <description>이 화면은 (1)편에서 아파치 서버 설치 후 확인할 때 나타나는 화면의 일부입니다. 화면에서 스크롤을 조금 내려보면 document root directory, ubuntu document root가 어디인지 확인할 수 있습니다. html폴더 안에 파일을 올려야 publicDNS/파일이름 으로 웹 브라우저에서 접근 가능합니다.
데이터베이스 sudo apt-get update //패키지 업데이트 sudo apt-get install mysql-server mysql -uroot -p //mysql root 계정 접속 show databases; //db 확인 exit //mysql 나와서 다시 리눅스로 PHP sudo add-apt-repository ppa:ondrej/php //보안을 위한 저장소 추가 sudo apt-get update //저장소에서 패키지 업데이트 sudo apt-get install php //했더니 php 7.</description>
    </item>
    
    <item>
      <title>AWS_EC2_웹서버(1)</title>
      <link>https://june512.github.io/aws_ec2_%EC%9B%B9%EC%84%9C%EB%B2%841/</link>
      <pubDate>Tue, 19 May 2020 17:48:02 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/aws_ec2_%EC%9B%B9%EC%84%9C%EB%B2%841/</guid>
      <description>클러스터 생성 aws 공식 홈페이지에서 가이드라인을 putty로 제공하기 때문에 사용. putty를 사용하는 이유는 서버를 구성하는 우분투 리눅스를 원격으로 연결해서 사용하기 위함이다. putty 설치 : &amp;lt;https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html&amp;gt; 1. 키 변경 .pem 확장자의 키를 .ppk확장자의 private key로 변경하는 과정이다.
putty를 통합설치하면 딸려있는 puttygen을 이용한다.
Load 클릭 - 모든 파일 - 아까 만들었던 .pem 키 선택
Save private key로 저장. (이름은 똑같이)
2. 설정 및 접속 https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/putty.html 를 참조 호스트 네임 ubuntu@(public dns) SSH 포트22 SSH-Auth-아까 만든 .</description>
    </item>
    
    <item>
      <title>Ubuntu_git</title>
      <link>https://june512.github.io/ubuntu_git/</link>
      <pubDate>Tue, 19 May 2020 17:15:23 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/ubuntu_git/</guid>
      <description>Ubuntu에서 git 설치 sudo apt-get install git 명령어를 입력하여 패키지 리스트를 업데이트합니다. sudo apt install git 명령어를 입력하여 깃을 설치합니다. git --version 설치할 git의 버전을 알 수 있습니다. git config --global user.name [이름] git config --global user.mail [메일 주소] 명령어를 입력하여 깃에 push했을때 올라갈 내 정보를 입력해줍니다. git clone [url 주소] 자신이 원하는 프로젝트를 깃으로부터 내려받습니다. 출처 : https://coding-factory.tistory.com/502</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://june512.github.io/post/test/</link>
      <pubDate>Tue, 19 May 2020 16:40:12 +0900</pubDate>
      <author>kki6890k@gmail.com (Kim Kang-il)</author>
      <guid>https://june512.github.io/post/test/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>